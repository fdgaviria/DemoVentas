@model Ventas.WebApp.Models.VentasIndexViewModel

@{
    ViewData["Title"] = "Gestión de Ventas";
}

<h1>Gestión de Ventas</h1>

<div class="mb-3">
    <a asp-action="Formulario" class="btn btn-primary">Registrar Nueva Venta</a>
</div>

<div class="card mb-4">
    <div class="card-header">
        Filtros
    </div>
    <div class="card-body">
        <form asp-action="Index" method="get">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="filtroCodigoVenta">Código de Venta:</label>
                        <input type="text" name="filtroCodigoVenta" class="form-control" value="@Model.FiltroCodigoVenta" />
                    </div>
                </div>
                <div class="col-md-8 d-flex align-items-end justify-content-end">
                    <button type="submit" class="btn btn-info me-2">Aplicar Filtro</button>
                    <a asp-action="Index" class="btn btn-secondary">Limpiar Filtro</a>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Acciones</th>
                <th>@Html.DisplayNameFor(model => model.Ventas.FirstOrDefault().Codigo)</th>
                <th>@Html.DisplayNameFor(model => model.Ventas.FirstOrDefault().Fecha)</th>
                <th>@Html.DisplayNameFor(model => model.Ventas.FirstOrDefault().ClienteNombre)</th>
                <th>@Html.DisplayNameFor(model => model.Ventas.FirstOrDefault().PuntoVentaNombre)</th>
                <th>@Html.DisplayNameFor(model => model.Ventas.FirstOrDefault().Producto)</th>
                <th>@Html.DisplayNameFor(model => model.Ventas.FirstOrDefault().Total)</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Ventas != null && Model.Ventas.Any())
            {
                @foreach (var item in Model.Ventas)
                {
                    <tr>
                        <td>
                            <a asp-action="Editar" asp-route-codigo="@item.Codigo" class="btn btn-sm btn-warning">Editar</a> |
                            <button type="button" class="btn btn-sm btn-danger delete-btn" data-codigo="@item.Codigo">Eliminar</button>
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.Codigo)</td>
                        <td>@Html.DisplayFor(modelItem => item.Fecha)</td>
                        <td>@Html.DisplayFor(modelItem => item.ClienteNombre)</td>
                        <td>@Html.DisplayFor(modelItem => item.PuntoVentaNombre)</td>
                        <td>@Html.DisplayFor(modelItem => item.Producto)</td>
                        <td>@Html.DisplayFor(modelItem => item.Total)</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center">No hay ventas registradas que coincidan con los criterios.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)"
               asp-route-pageSize="@Model.PageSize" asp-route-filtroCodigoVenta="@Model.FiltroCodigoVenta">Anterior</a>
        </li>
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i"
                   asp-route-pageSize="@Model.PageSize" asp-route-filtroCodigoVenta="@Model.FiltroCodigoVenta">@i</a>
            </li>
        }
        <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)"
               asp-route-pageSize="@Model.PageSize" asp-route-filtroCodigoVenta="@Model.FiltroCodigoVenta">Siguiente</a>
        </li>
    </ul>
</nav>

<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirmar Eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ¿Está seguro de eliminar la venta con código: <strong id="deleteVentaCodigo"></strong>?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form id="deleteForm" asp-action="Eliminar" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="codigo" id="hiddenDeleteCodigo" />
                    <button type="submit" class="btn btn-danger">Eliminar</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.delete-btn').on('click', function () {
                var codigo = $(this).data('codigo');
                $('#deleteVentaCodigo').text(codigo);
                $('#hiddenDeleteCodigo').val(codigo);
                var deleteModal = new bootstrap.Modal(document.getElementById('confirmDeleteModal'));
                deleteModal.show();
            });
        });
    </script>
}